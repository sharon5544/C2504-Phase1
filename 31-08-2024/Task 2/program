using System;
using System.Collections.Generic;
using log4net;

namespace PrescriptionApp
{
    public class Program
    {
        private static readonly ILog log = LogManager.GetLogger(typeof(Program));

        static void Main(string[] args)
        {
            bool running = true;

            while (running)
            {
                Console.WriteLine("Choose an operation:");
                Console.WriteLine("1. Create Prescription");
                Console.WriteLine("2. Read Prescriptions");
                Console.WriteLine("3. Update Prescription");
                Console.WriteLine("4. Delete Prescription");
                Console.WriteLine("5. Exit");

                string input = Console.ReadLine();
                switch (input)
                {
                    case "1":
                        CreatePrescription();
                        break;
                    case "2":
                        ReadPrescriptions();
                        break;
                    case "3":
                        UpdatePrescription();
                        break;
                    case "4":
                        DeletePrescription();
                        break;
                    case "5":
                        running = false;
                        break;
                    default:
                        Console.WriteLine("Invalid choice. Please enter a number between 1 and 5.");
                        break;
                }
            }
        }

        private static void CreatePrescription()
        {
            try
            {
                Console.Write("Enter Doctor's Name: ");
                string doctor = Console.ReadLine();
                Console.Write("Enter Patient's Name: ");
                string patient = Console.ReadLine();
                Console.Write("Enter Dosage (mg): ");
                int dosage = int.Parse(Console.ReadLine());

                var prescription = new Prescription
                {
                    Doctor = doctor,
                    Patient = patient,
                    Dosage = dosage
                };

                PrescriptionService.Create(prescription);
                Console.WriteLine("Prescription created successfully.");
            }
            catch (Exception ex)
            {
                log.Error("Error creating prescription: " + ex.Message);
                Console.WriteLine("An error occurred while creating the prescription.");
            }
        }

        private static void ReadPrescriptions()
        {
            try
            {
                List<Prescription> prescriptions = PrescriptionService.Read();
                foreach (var prescription in prescriptions)
                {
                    Console.WriteLine(prescription.ToString());
                }
            }
            catch (Exception ex)
            {
                log.Error("Error reading prescriptions: " + ex.Message);
                Console.WriteLine("An error occurred while reading prescriptions.");
            }
        }

        private static void UpdatePrescription()
        {
            try
            {
                Console.Write("Enter ID of the prescription to update: ");
                int id = int.Parse(Console.ReadLine());

                Console.Write("Enter new Doctor's Name: ");
                string doctor = Console.ReadLine();
                Console.Write("Enter new Patient's Name: ");
                string patient = Console.ReadLine();
                Console.Write("Enter new Dosage (mg): ");
                int dosage = int.Parse(Console.ReadLine());

                var prescription = new Prescription
                {
                    Id = id,
                    Doctor = doctor,
                    Patient = patient,
                    Dosage = dosage
                };

                PrescriptionService.Update(prescription);
                Console.WriteLine("Prescription updated successfully.");
            }
            catch (Exception ex)
            {
                log.Error("Error updating prescription: " + ex.Message);
                Console.WriteLine("An error occurred while updating the prescription.");
            }
        }

        private static void DeletePrescription()
        {
            try
            {
                Console.Write("Enter ID of the prescription to delete: ");
                int id = int.Parse(Console.ReadLine());

                PrescriptionService.Delete(id);
                Console.WriteLine("Prescription deleted successfully.");
            }
            catch (Exception ex)
            {
                log.Error("Error deleting prescription: " + ex.Message);
                Console.WriteLine("An error occurred while deleting the prescription.");
            }
        }
    }
}
